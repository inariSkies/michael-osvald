{"version":3,"sources":["imgs/MichaelHeadLogo.gif","imgs/smpl.jpg","textMessage.js","replyTextAnimation.js","chatAnimation.js","theme.js","App.js","reportWebVitals.js","index.js"],"names":["TextMessage","props","Slide","direction","in","timeout","Card","className","varient","style","backgroundColor","width","margin","BorderColor","CardContent","Typography","variant","color","typist","msg","ReplyTextAnimation","SmallCircle","cx","cy","r","fill","stroke","strokeWidth","Grow","ChatAnimation","useState","timeCount","setTimeCount","useEffect","setInterval","state","classes","makeStyles","root","marginTop","border","borderRadius","borderRight","height","cardStyle","Grid","container","justifyContent","flexwrap","spacing","paddingRight","createMuiTheme","typeography","useNextVarietes","fontFamily","join","palette","primary","main","contrastText","secondary","App","theme","responsiveFontSizes","flex","textShadow","fontSize","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.150d5338.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/MichaelHeadLogo.f52348f3.gif\";","export default __webpack_public_path__ + \"static/media/smpl.91677837.jpg\";","import React, {useState, useReducer, Fragment, useEffect} from \"react\";\r\n\r\nimport { MuiThemeProvider, AppBar,Toolbar,IconButton, Card, Paper, responsiveFontSizes,Slide } from '@material-ui/core';\r\nimport { CardContent, Typography } from '@material-ui/core';\r\nimport { BorderColor } from \"@material-ui/icons\";\r\nimport Typist from 'react-typist';\r\nconst TextMessage = props =>{\r\n\r\n  const textstyle ={\r\n    backgroundColor:\"#222\",\r\n    width:\"85%\",\r\n    margin:'10px',\r\n    BorderColor:\"#fff\"\r\n  }\r\n\r\nreturn (\r\n    <Fragment>\r\n       <Slide direction=\"up\" in={true}  timeout={500}>\r\n        <Card className = \"TextMessageBox\"  varient=\"outlined\" style={textstyle}>\r\n        <CardContent>\r\n         <Typography variant=\"h5\" color=\"primary\">\r\n         {props.typist?\r\n         <Typist>\r\n            {props.msg}\r\n          </Typist>:\r\n          \r\n          props.msg\r\n         }\r\n          </Typography>\r\n        </CardContent>\r\n        </Card>\r\n        </Slide>\r\n    </Fragment>\r\n);\r\n}\r\nexport default TextMessage;","import React, {Fragment}  from \"react\";\r\nimport {Grow,Paper } from '@material-ui/core';\r\n\r\n\r\n\r\n const ReplyTextAnimation =  props =>\r\n {\r\n  \r\nconst SmallCircle = () =>{\r\n    return(\r\n   <div>\r\n       <svg style={{width:\"35px\"}}> <circle\r\n       cx=\"25\"\r\n       cy=\"25\"\r\n       r=\"5\"\r\n       fill=\"#FFFFF1\"\r\n       stroke=\"#FFFFF1\"\r\n       strokeWidth=\"2\" />\r\n       </svg>\r\n    </div>\r\n    )\r\n  } \r\n    return(<Fragment>\r\n      <Grow in={true} timeout={300} > \r\n      {SmallCircle()}\r\n    </Grow>\r\n    <Grow in={true} timeout={600} > \r\n      {SmallCircle()}\r\n    </Grow>\r\n    <Grow in={true} timeout={900} > \r\n      {SmallCircle()}\r\n    </Grow>\r\n    </Fragment>)\r\n\r\n }\r\n export default ReplyTextAnimation","import React, {useState, useReducer, Fragment, useEffect} from \"react\";\r\nimport {  AppBar,Toolbar,IconButton, Card, Grid, Slide, makeStyles } from '@material-ui/core';\r\nimport { CardContent, Typography,Grow,Paper } from '@material-ui/core';\r\nimport TextMessage from \"./textMessage\";\r\nimport ReplyTextAnimation from \"./replyTextAnimation\";\r\nconst ChatAnimation = props => {\r\nconst [timeCount, setTimeCount]=useState(0);\r\n\r\nuseEffect(()=>\r\n{  \r\n    setInterval(()=>{\r\n        setTimeCount(state=>(state +1))\r\n    },1000);\r\n},[]);\r\n\r\n\r\n\r\nconst cardStyle =makeStyles({\r\n  root:{\r\n  width:'85%',\r\n  marginTop:\"2%\",\r\n  backgroundColor:\"#01012B\", \r\n  border: '2px solid #ff2a6d',\r\n  borderRadius:'0',\r\n  borderRight:'15px solid #ff2a6d',\r\n  height:\"250px\"\r\n  },\r\n});\r\n\r\nconst classes = cardStyle();\r\n\r\nreturn (\r\n    <Fragment>\r\n    <Card className={classes.root}>\r\n    <CardContent>\r\n\r\n    <Grid container  justifyContent=\"flex-start\" flexwrap=\"nowrap\"  spacing={0} style={{paddingRight:\"10%\"}}>\r\n      {timeCount===1?ReplyTextAnimation():null}\r\n      {timeCount===2?ReplyTextAnimation():null}\r\n    </Grid>\r\n    <Grid container spacing={3}>\r\n    {timeCount>2?  <TextMessage msg=\"Hey is your website done yet...?\" ></TextMessage>:null}\r\n    </Grid>\r\n    <Grid container justifyContent=\"flex-end\">\r\n    {timeCount>4?<TextMessage msg=\"Hahaha ah not yet..\"typist={true}></TextMessage>:null}\r\n      </Grid>\r\n      </CardContent>\r\n      </Card>\r\n    </Fragment>\r\n);\r\n};\r\n\r\n\r\n\r\nexport default ChatAnimation;","import { unstable_createMuiStrictModeTheme as createMuiTheme } from \"@material-ui/core\";\r\nimport { palette } from \"@material-ui/system\";\r\nexport default createMuiTheme({\r\n    typeography:{\r\n        useNextVarietes:true,\r\n        fontFamily: [\r\n            '-apple-system',\r\n            'BlinkMacSystemFont',\r\n            '\"Segoe UI\"',\r\n            'Roboto',\r\n            '\"Helvetica Neue\"',\r\n            'Arial',\r\n            'sans-serif',\r\n            '\"Apple Color Emoji\"',\r\n            '\"Segoe UI Emoji\"',\r\n            '\"Segoe UI Symbol\"',\r\n          ].join(','),\r\n    },\r\n    palette:{\r\n        primary: {main: \"#D1F7FF\", contrastText: \"#FFF\"},\r\n        secondary:{main:\"#FFF\"}\r\n    }\r\n})","import MichaelHeadLogo from './imgs/MichaelHeadLogo.gif';\nimport './App.css';\nimport sampleImg from './imgs/smpl.jpg'\nimport ChatAnimation from './chatAnimation';\nimport theme from './theme';\nimport { MuiThemeProvider, AppBar,Toolbar,IconButton, Card, responsiveFontSizes,Slide } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { CardContent, Typography } from '@material-ui/core';\n\nfunction App() {\n  return (\n\n\n<div className=\"App\">\n{/*<img src={sampleImg} className=\"Back-Image\"/>*/}\n<MuiThemeProvider theme={responsiveFontSizes(theme)}>    \n      {/*<AppBar  style={{backgroundColor:'#222', width:'98%', marginTop:'1%', marginBottom:'1%', marginRight:'1%', position:'relative'}}>\n        <Toolbar >*/}\n        <Typography variant=\"h2\" color=\"primary\" style={{flex: '1', textShadow:'0 0 7px #05D9E8, 2px 5px 5px #005678', fontSize:'calc(36px + 2vmin)',  fontFamily: `'Orbitron',san-serif`}}>\n           _michaelOsvald \n        </Typography>\n        \n      \n       {/*  <IconButton edge=\"end\" color=\"inherit\" aria-label=\"menu\" >\n        <MenuIcon> </MenuIcon> \n        </IconButton>\n      >\n        </Toolbar>\n      </AppBar>\n */}\n   \n      <ChatAnimation/>\n    </MuiThemeProvider>\n   \n   {// <img src={MichaelHeadLogo} className=\"App-logo\" alt=\"logo\" />\n   }\n    \n    </div>\n   \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}